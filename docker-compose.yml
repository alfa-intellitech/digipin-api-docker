version: '3.8'

services:
  digipin-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: digipin-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
    volumes:
      # Optional: Mount logs directory if the app generates logs
      - ./logs:/usr/src/app/logs
    networks:
      - digipin-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Nginx reverse proxy for production deployment
  nginx:
    image: nginx:alpine
    container_name: digipin-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - digipin-api
    networks:
      - digipin-network
    profiles:
      - production

  # Optional: Redis for caching (if needed for performance optimization)
  redis:
    image: redis:7-alpine
    container_name: digipin-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - digipin-network
    profiles:
      - with-cache

networks:
  digipin-network:
    driver: bridge

volumes:
  redis_data:
    driver: local